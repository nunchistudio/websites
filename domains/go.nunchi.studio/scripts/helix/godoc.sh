#!/bin/bash

function SyncAndClean() {
  PKG=$2
  if [[ $PKG = "index" ]]; then
    PKG=""
  fi

  gomarkdoc --output ./domains/go.nunchi.studio/pages/helix/ref/$2.md \
  --header "---
location: \"/$PKG\"
title: \"$1\"
---" \
  ../helix.go/$PKG

  sed -i "" "s/<!-- Code generated by gomarkdoc. DO NOT EDIT -->//" \
    ./domains/go.nunchi.studio/pages/helix/ref/$2.md

  sed -i "" '/^Generated/d' \
    ./domains/go.nunchi.studio/pages/helix/ref/$2.md

  if [[ $PKG = "" ]]; then
    sed -i "" '/^## Index/d' \
      ./domains/go.nunchi.studio/pages/helix/ref/index.md
  fi

  sed -i "" '/^<a/d' \
    ./domains/go.nunchi.studio/pages/helix/ref/$2.md

  sed -i "" '/./,$!d' \
    ./domains/go.nunchi.studio/pages/helix/ref/$2.md

  sed -i "" 's+blob/main/helix.go+blob/main+g' \
    ./domains/go.nunchi.studio/pages/helix/ref/$2.md
}

SyncAndClean "helix" "index"

find ./domains/go.nunchi.studio/pages/helix/ref -name "*.md" -exec rm -rf \;
packages=$( cat ./domains/go.nunchi.studio/data/helix/ecosystem.json | jq -r '.packages[] | .path' | cat )
for pkg in $packages; do
  SyncAndClean "$pkg" "$pkg"
done

find ./domains/go.nunchi.studio/pages/helix/ref/integration -name "*.md" -exec rm -rf \;
integrations=$( cat ./domains/go.nunchi.studio/data/helix/ecosystem.json | jq -r '.integrations[] | select(.soon|not) | .id' | cat )
for mod in $integrations; do
  SyncAndClean "$mod" "integration/$mod"
done
